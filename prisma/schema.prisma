// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
  output   = "./zod" // You can change this path as needed
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  // Optional for WebAuthn support

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Accounts {
  id     String  @id @default(cuid())
  name   String
  userId String
  bankId String?

  transactions Transactions[]
}

model Categories {
  id     String  @id @default(cuid())
  name   String
  userId String
  bankId String?

  transactions Transactions[]
}

model Transactions {
  id     String   @id @default(cuid())
  amount Int
  payee  String
  notes  String?
  date   DateTime

  accountId String
  account   Accounts @relation(fields: [accountId], references: [id], onDelete: Cascade)

  categoryId String?
  category   Categories? @relation(fields: [categoryId], references: [id])
}
